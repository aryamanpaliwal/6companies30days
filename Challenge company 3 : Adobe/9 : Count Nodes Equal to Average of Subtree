// 9 : Count Nodes Equal to Average of Subtree
// Problem : https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int dfs(TreeNode* root, int &sum, int &n)
    {
        if(root==NULL)
        {
            sum=0;
            n=0;
            return 0;
        }
        int sum_1=0,sum_2=0,n_1=0,n_2=0;
        int res_1=dfs(root->left,sum_1,n_1);
        int res_2=dfs(root->right,sum_2,n_2);
        int res=res_1+res_2;
        n=1+n_1+n_2;
        sum=root->val+sum_1+sum_2;
        int avg=sum/(double)n;
        if(avg==root->val)
            res++;
        return res;
    }
    int averageOfSubtree(TreeNode* root)
    {
        int sum,n;
        return dfs(root,sum,n);
    }
};
