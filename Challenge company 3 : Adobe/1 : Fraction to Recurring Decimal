// 1 : Fraction to Recurring Decimal
// Problem : https://leetcode.com/problems/fraction-to-recurring-decimal/
typedef long long int ll;
class Solution {
public:
    string fractionToDecimal(int num, int den)
    {
        string res;
        if((num<0 == den<0)||(num==0))
            res="";
        else
            res="-";
        num=(ll)abs(num);
        den=(ll)abs(den);
        ll temp=num/den;
        res+=to_string(temp);
        ll rem=num%den;
        if(rem==0)
            return res;
        res+=".";
        unordered_map<ll,int> mp;
        while(rem!=0)
        {
            if(mp.find(rem)!=mp.end())
            {
                int pos = mp[rem];
                res.insert(pos, "(");
                res+=")";
                break;
            }
            else
            {
                mp[rem] = res.length();
                rem*=10;
                temp=rem/den;
                rem=rem%den;
                res+=to_string(temp);
            }
        }
        return res;
    }
};
