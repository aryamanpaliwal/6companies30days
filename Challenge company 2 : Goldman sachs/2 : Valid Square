// 2 : Valid Square
// Problem : https://leetcode.com/problems/valid-square/description/
class Solution {
public:
    int dist(vector<int> &a, vector<int> &b)
    {
        return (pow(a[0]-b[0], 2)+pow(a[1]-b[1], 2));
    }
    bool validSquare(vector<int>& p1, vector<int>& p2, vector<int>& p3, vector<int>& p4)
    {
        unordered_set<int> s;
        s.insert(dist(p1, p2));
        s.insert(dist(p1, p3));
        s.insert(dist(p1, p4));
        s.insert(dist(p3, p2));
        s.insert(dist(p4, p2));
        s.insert(dist(p3, p4));
        return (s.size()==2 && s.find(0)==s.end());
    }
};
