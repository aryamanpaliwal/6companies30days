// 5 : Split Array into Consecutive Subsequences
// Problem : https://leetcode.com/problems/split-array-into-consecutive-subsequences/
class Solution {
public:
    bool isPossible(vector<int>& nums) {
        unordered_map<int, int> freq;
        unordered_map<int, int> req;
        for(auto num:nums)
            freq[num]++;
        for(auto num:nums)
        {
            if(freq[num]==0)
                continue;
            if(req[num]>0)
            {
                freq[num]--;
                req[num]--;
                req[num+1]++;
            }
            else if(freq.find(num)!=freq.end() && freq.find(num+1)!=freq.end() && freq.find(num+2)!=freq.end())
            {
                freq[num]--;
                freq[num+1]--;
                freq[num+2]--;
                req[num+3]++;
            }
            else
                return false;
        }
        return true;
    }
};
